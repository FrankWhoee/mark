args = {...}
function is_inventory_full()
	for i=1,16,1 do
		turtle.select(i)
		if turtle.getItemCount() == 0 then
			return false
		end
	end
	return true
end

function move(direction)
	if direction == "forward" then
		while not move("forward") do
		end
	elif direction == "back" then
		while not move("back") do
		end
	elif direction == "up" then
		while not move("up") do
		end
	elif direction == "down" then
		while not move("down") do
		end
	end
end

xf = tonumber(args[2])
yf = tonumber(args[1])
zf = tonumber(args[3])

x=0
y=0
z=0
turtle.digDown()
move("down")
while z<zf do
	while y<yf do
		x=0
		while x<xf-1 do
			turtle.dig()
			move("forward")
			x = x + 1
		end
		if y % 2 == 0 then
			turtle.turnRight()
			turtle.dig()
			move("forward")
			turtle.turnRight()
		else
			turtle.turnLeft()
			turtle.dig()
			move("forward")
			turtle.turnLeft()
		end
		y = y + 1
	end
	x = 0
	y = 0
	if y % 2 == 1 then
		turtle.turnRight()
		while y < yf do
			turtle.dig()
			move("forward")
			y = y + 1
		end
		turtle.turnLeft()
		while x < xf do
			turtle.dig()
			move("forward")
			x = x + 1
		end
		turtle.turnRight()
		turtle.turnRight()
	else
		turtle.turnLeft()
		while y < yf do
			turtle.dig()
			move("forward")
			y = y + 1
		end
		turtle.turnRight()
	end
	if is_inventory_full() then
		while z > 0 do
			turtle.digUp()
			move("up")
			z = z - 1
		end
		break
	end
	turtle.digDown()
	move("down")
	z = z + 1
	x=0
	y=0
end
-- 4 70 107
-- 1 70 104